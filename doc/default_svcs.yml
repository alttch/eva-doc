- nam: eva.aaa.acl
  exe: svc/eva-aaa-acl
  des: Default ACL service
  ins: by default with HMI (*--hmi*)
  txt: Base authorization service, see :doc:`/auth` for more details.
  tpl: svc-tpl-aaa-acl.yml
  api: svc/aaa-acl/eapi.yml
- nam: eva.aaa.localauth
  exe: svc/eva-aaa-localauth
  des: Local user/key authentication service
  ins: by default with HMI (*--hmi*)
  txt: Local user/API key authentication service
  tpl: svc-tpl-aaa-localauth.yml
  api: svc/aaa-localauth/eapi.yml
- nam: eva.controller.enipN
  exe: svc/eva-controller-enip
  des: Ethernet/IP PLC controller gateway
  txt: Allows to communicate with Ethernet/IP-powered PLCs and other equipment.
  tpl: svc-tpl-controller-enip.yml
  api: svc/controller-enip/eapi.yml
- nam: eva.controller.modbusN
  exe: svc/eva-controller-modbus
  des: Modbus master gateway/service
- nam: eva.controller.py
  exe: venv/bin/eva4-svc-controller-py
  des: Python macros controller
  ins: py:eva4-controller-py
- nam: eva.controller.virtual
  exe: svc/eva-controller-virtual
  des: Virtual (test) controller
- nam: eva.filemgr.main
  des: File manager service
  exe: svc/eva-filemgr
  ins: always by default
- nam: eva.db.iN
  exe: svc/eva-db-influx
  des: InfluxDB v1/v2 state history
- nam: eva.db.sN
  exe: svc/eva-db-sql
  des: SQL databases state history
- nam: eva.svc.expN
  exe: svc/eva-svc-expiration
  des: Item state expiration service
  txt: |
    Marks items as expired/error.

    Useful to create lvar timers (timers have status -1 when expired) or set
    error item states (items get status=1 if not updated for a long time, e.g.
    because of a data puller service crash).
  tpl: svc-tpl-expiration.yml
- nam: eva.svc.fwriterN
  exe: svc/eva-svc-filewriter
  des: Item state file writer (JSON/CSV)
  txt: |
    Allows to write item states into JSON/CSV text files.

    The files can be rotated with any external tool or manually. As soon as the
    file is rotated, a new one is created automatically.
  tpl: svc-tpl-filewriter.yml
  api: svc/svc-filewriter/eapi.yml
- nam: eva.hmi.default
  exe: svc/eva-hmi
  des: HMI (UI) and HTTP API service
  ins: "by default with *--hmi* arg"
- nam: eva.svc.lockerN
  exe: svc/eva-svc-locker
  des: Shared lock service
  txt: Allows other services to work with shared locks
  tpl: svc-tpl-locker.yml
  api: svc/svc-locker/eapi.yml
- nam: eva.svc.mailer
  exe: svc/eva-svc-mailer
  des: Mailer service
  txt: Allows other services to send email notifications
  tpl: svc-tpl-mailer.yml
  api: svc/svc-mailer/eapi.yml
- nam: eva.svc.mirror
  exe: svc/eva-svc-mirror
  des: Mirror service
  txt: |
    Allows to host mirror for the current version of EVA ICS distribution and
    Python modules if venv is configured.

    Updating mirror files
    =====================

    Use either :ref:`eva-shell`:

    .. code:: shell

      eva mirror update

    or :ref:`eva-cloud-manager-cli`:

    .. code:: shell

      /opt/eva4/bin/eva-cloud-manager node mirror-update

  tpl: svc-tpl-mirror.yml
- nam: eva.svc.modbusN
  exe: svc/eva-svc-modbus-slave
  des: Modbus slave service
- nam: eva.repl.N
  exe: svc/eva-repl
  des: Replication service
- nam: eva.repl.legacyN
  exe: venv/bin/eva4-svc-repl-legacy
  des: legacy (v3) replication service
  ins: py:eva4-repl-legacy
